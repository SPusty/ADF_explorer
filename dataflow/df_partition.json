{
	"name": "df_partition",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet",
						"type": "DatasetReference"
					},
					"name": "source4"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "cleansinkorder"
				}
			],
			"transformations": [
				{
					"name": "cast1"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ORDER_ID as string,",
				"          ORDER_DATETIME as string,",
				"          CUSTOMER_ID as string,",
				"          ORDER_STATUS as string,",
				"          STORE_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source4",
				"source4 cast(output(",
				"          ORDER_ID as integer,",
				"          ORDER_DATETIME as string,",
				"          CUSTOMER_ID as integer,",
				"          ORDER_STATUS as string,",
				"          STORE_ID as integer",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 derive(UpdatedTimestamp = currentUTC(),",
				"          ORDER_DATE = toDate(ORDER_DATETIME,'dd-MMM-yy HH.mm.ss.SS')) ~> derivedColumn3",
				"derivedColumn3 select(mapColumn(",
				"          ORDER_ID,",
				"          ORDER_DATE,",
				"          CUSTOMER_ID,",
				"          ORDER_STATUS,",
				"          STORE_ID,",
				"          UpdatedTimestamp",
				"     ),",
				"     partitionBy('dynamicRange', 4,",
				"          ORDER_STATUS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Order_Complete','Order_Refunded','Order_Cancelled'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('dynamicRange', 3,",
				"          ORDER_STATUS",
				"     ),",
				"     format: 'parquet') ~> cleansinkorder"
			]
		}
	}
}